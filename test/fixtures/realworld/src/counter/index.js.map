{"version":3,"sources":["src/counter/index.tsx"],"names":[],"mappings":";AAAA,4BAAqC,eAAe,CAAC,CAAA;AAKrD;IAAA;IAYA,CAAC;IAVG,yBAAO,GAAP,UAAQ,KAAiB,EAAE,MAAW;QAA9B,qBAAiB,GAAjB,SAAiB;QACrB,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YAClB,KAAK,uBAAS;gBACV,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC;YACrB,KAAK,uBAAS;gBACV,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC;YACrB;gBACI,MAAM,CAAC,KAAK,CAAC;QACrB,CAAC;IACL,CAAC;IACL,cAAC;AAAD,CAZA,AAYC,IAAA;AAZD;yBAYC,CAAA;AACD,oDAAoD;AACpD,iCAAiC;AACjC,yCAAyC;AACzC,iCAAiC;AACjC,2CAA2C","file":"src/counter/index.js","sourcesContent":["import { INCREMENT, DECREMENT } from './actionTypes';\r\n\r\ninterface ICounter{\r\n    counter(state: number, action: {type: string}): number;\r\n}\r\nexport default class Counter implements ICounter {\r\n\r\n    counter(state: number = 0, action: any) {\r\n        switch (action.type) {\r\n            case INCREMENT:\r\n                return state + 1;\r\n            case DECREMENT:\r\n                return state - 1;\r\n            default:\r\n                return state;\r\n        }\r\n    }\r\n}\r\n// const store = createStore(new Counter().counter);\r\n// console.log(store.getState());\r\n// store.dispatch({ type: \"INCREMENT\" });\r\n// console.log(store.getState());\r\n///////////////////////////////////////////\r\n"],"sourceRoot":"/source/"}