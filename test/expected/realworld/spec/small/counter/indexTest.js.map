{"version":3,"sources":["spec/small/counter/indexTest.ts"],"names":[],"mappings":";AAAA,qDAAqD;AACrD,sCAAsC;AACtC,wBAAwB;AACxB,qBAAuB,MAAM,CAAC,CAAA;AAC9B,wCAAwC;AACxC,iCAAiC;AACjC,8CAA8C;AAC9C,gDAAgD;AAEhD,qCAAqC;AACrC,wBAAoB,sBAAsB,CAAC,CAAA;AAC3C,0CAA0C;AAC1C,6BAA6B;AAC7B,kDAAkD;AAClD,iDAAiD;AACjD,oEAAoE;AACpE,8BAA8B;AAC9B,2BAA2B;AAC3B,4DAA4D;AAC5D,MAAM;AACN,+BAA+B;AAC/B,0EAA0E;AAC1E,8CAA8C;AAC9C,2BAA2B;AAC3B,+BAA+B;AAC/B,6CAA6C;AAE7C,QAAQ,CAAC,SAAS,EAAE;IAChB,IAAI,OAAY,CAAC;IACjB,UAAU,CAAC;QACP,OAAO,GAAG,IAAI,iBAAO,EAAE,CAAC;QACxB,2BAA2B;IAC/B,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,kBAAkB,EAAE,UAAC,IAAI;QACxB,aAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC3D,aAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC3D,IAAI,EAAE,CAAC;IACX,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,kBAAkB,EAAE,UAAC,IAAI;QACxB,aAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC3D,aAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5D,IAAI,EAAE,CAAC;IACX,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,mDAAmD,EAAE,UAAC,IAAI;QACzD,aAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC/D,IAAI,EAAE,CAAC;IACX,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,uCAAuC,EAAE,UAAC,IAAI;QAC7C,aAAM,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAChD,IAAI,EAAE,CAAC;IACX,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","file":"spec/small/counter/indexTest.js","sourcesContent":["// declare function require(moduleName: string): any;\r\n// import * as calc from '../../index'\r\n// import '../../index';\r\nimport { expect } from 'chai';\r\n// import calc = require('../../index');\r\n// import Counter from 'counter';\r\n// import Counter from '../../../src/counter';\r\n// import counterClass = require('../../index');\r\n\r\n// import Counter from 'src/counter';\r\nimport Counter from '../../../src/counter';\r\n// import * as Helper from '../../helper';\r\n// var baseUrl = '../../../';\r\n// var Counter = require(baseUrl + 'src/counter');\r\n// var Counter = require('../../../src/counter');\r\n// var Counter = new Helper({baseURL: '../'}).import('src/counter');\r\n// Counter.then((Counter) => {\r\n//     console.log(\"eiei\");\r\n//     console.log(Counter.counter(0, {type: \"INCREMENT\"}));\r\n// });\r\n// console.log(typeof Counter);\r\n// var config = new Helper({baseURL: '../'}); // relative from helper file\r\n// var Counter = config.import('src/counter');\r\n// require('../../helper');\r\n// console.log(typeof Counter);\r\n// console.log(Helper.import('src/counter'));\r\n\r\ndescribe('Counter', () => {\r\n    var subject: any;\r\n    beforeEach(() => {\r\n        subject = new Counter();\r\n        // subject = new Counter();\r\n    });\r\n    it('should INCREMENT', (done) => {\r\n        expect(subject.counter(0, { type: \"INCREMENT\" })).to.eq(1);\r\n        expect(subject.counter(1, { type: \"INCREMENT\" })).to.eq(2);\r\n        done();\r\n    });\r\n    it('should DECREMENT', (done) => {\r\n        expect(subject.counter(1, { type: \"DECREMENT\" })).to.eq(0);\r\n        expect(subject.counter(0, { type: \"DECREMENT\" })).to.eq(-1);\r\n        done();\r\n    });\r\n    it('should return state if not INCREMENT or DECREMENT', (done) => {\r\n        expect(subject.counter(1, { type: \"SOMETING_ELSE\" })).to.eq(1);\r\n        done();\r\n    });\r\n    it('should return 0 if state is undefined', (done) => {\r\n        expect(subject.counter(undefined, {})).to.eq(0);\r\n        done();\r\n    });\r\n});\r\n"],"sourceRoot":"/source/"}